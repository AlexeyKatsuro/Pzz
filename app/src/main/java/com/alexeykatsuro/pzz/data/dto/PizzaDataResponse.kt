package com.alexeykatsuro.pzz.data.dto

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

@JsonClass(generateAdapter = true)
data class PizzaDataResponse(
    @Json(name = "id")
    val id: Long? = null,
    @Json(name = "title")
    val title: String? = null,
    @Json(name = "title_inner")
    val titleInner: String? = null,
    @Json(name = "anonce")
    val anonce: String? = null,
    @Json(name = "photo_small")
    val photoSmall: String? = null,
    @Json(name = "photo1")
    val photo1: String? = null,
    @Json(name = "photo2")
    val photo2: String? = null,
    @Json(name = "big_traditional_calories")
    val bigTraditionalCalories: Any? = null,
    @Json(name = "big_traditional_carbohydrates")
    val bigTraditionalCarbohydrates: Any? = null,
    @Json(name = "big_traditional_proteins")
    val bigTraditionalProteins: Any? = null,
    @Json(name = "big_traditional_fats")
    val bigTraditionalFats: Any? = null,
    @Json(name = "big_thin_calories")
    val bigThinCalories: Int? = null,
    @Json(name = "big_thin_carbohydrates")
    val bigThinCarbohydrates: Int? = null,
    @Json(name = "big_thin_proteins")
    val bigThinProteins: Int? = null,
    @Json(name = "big_thin_fats")
    val bigThinFats: Int? = null,
    @Json(name = "big_price")
    val bigPrice: Int? = null,
    @Json(name = "big_price_old")
    val bigPriceOld: Any? = null,
    @Json(name = "is_big")
    val isBig: Int? = null,
    @Json(name = "thin_traditional_calories")
    val thinTraditionalCalories: Any? = null,
    @Json(name = "thin_traditional_carbohydrates")
    val thinTraditionalCarbohydrates: Any? = null,
    @Json(name = "thin_traditional_proteins")
    val thinTraditionalProteins: Any? = null,
    @Json(name = "thin_traditional_fats")
    val thinTraditionalFats: Any? = null,
    @Json(name = "thin_thin_calories")
    val thinThinCalories: Any? = null,
    @Json(name = "thin_thin_carbohydrates")
    val thinThinCarbohydrates: Any? = null,
    @Json(name = "thin_thin_proteins")
    val thinThinProteins: Any? = null,
    @Json(name = "thin_thin_fats")
    val thinThinFats: Any? = null,
    @Json(name = "thin_price")
    val thinPrice: Int? = null,
    @Json(name = "thin_price_old")
    val thinPriceOld: Any? = null,
    @Json(name = "is_thin")
    val isThin: Int? = null,
    @Json(name = "medium_traditional_calories")
    val mediumTraditionalCalories: Any? = null,
    @Json(name = "medium_traditional_carbohydrates")
    val mediumTraditionalCarbohydrates: Any? = null,
    @Json(name = "medium_traditional_proteins")
    val mediumTraditionalProteins: Any? = null,
    @Json(name = "medium_traditional_fats")
    val mediumTraditionalFats: Any? = null,
    @Json(name = "medium_thin_calories")
    val mediumThinCalories: Int? = null,
    @Json(name = "medium_thin_carbohydrates")
    val mediumThinCarbohydrates: Int? = null,
    @Json(name = "medium_thin_proteins")
    val mediumThinProteins: Int? = null,
    @Json(name = "medium_thin_fats")
    val mediumThinFats: Int? = null,
    @Json(name = "medium_price")
    val mediumPrice: Int? = null,
    @Json(name = "medium_price_old")
    val mediumPriceOld: Any? = null,
    @Json(name = "is_medium")
    val isMedium: Int? = null,
    @Json(name = "in_stock")
    val inStock: Boolean? = null,
    @Json(name = "is_super")
    val isSuper: Boolean? = null,
    @Json(name = "is_break")
    val isBreak: Boolean? = null,
    @Json(name = "meal_only")
    val mealOnly: Int? = null,
    @Json(name = "position")
    val position: Int? = null,
    @Json(name = "new_recipe")
    val newRecipe: Int? = null,
    @Json(name = "big_diameter")
    val bigDiameter: String? = null,
    @Json(name = "big_weight")
    val bigWeight: String? = null,
    @Json(name = "thin_diameter")
    val thinDiameter: String? = null,
    @Json(name = "thin_weight")
    val thinWeight: String? = null,
    @Json(name = "medium_diameter")
    val mediumDiameter: String? = null,
    @Json(name = "medium_weight")
    val mediumWeight: String? = null
)